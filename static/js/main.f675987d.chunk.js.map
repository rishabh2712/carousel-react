{"version":3,"sources":["containers/Login/index.js","containers/App/config.js","containers/App/Slide.js","containers/App/actions.js","containers/App/index.js","containers/index.js","serviceWorker.js","containers/App/reducer.js","index.js","configureStore.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","validateInput","e","_this$state","state","validate","email","password","length","emailState","setState","passwordState","handleChange","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","target","value","name","wrap","_context","prev","next","type","checked","defineProperty","stop","_x","apply","arguments","bind","assertThisInitialized","preventDefault","history","push","_this2","_this$state2","react_default","createElement","Container","className","Form","onSubmit","submitForm","Col","FormGroup","Label","Input","id","placeholder","valid","invalid","onChange","FormFeedback","FormText","for","Button","Component","numbers","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","Slide","activeIndex","slides","previous","goToIndex","onExiting","onExited","animating","nextProps","nextIndex","newIndex","Carousel","CarouselIndicators","items","onClickHandler","map","item","idx","_React$createElement","CarouselItem","key","tag","CarouselCaption","captionHeader","CarouselControl","direction","directionText","SET_SLIDE","App","toggleDropdown","prevState","dropdownOpen","handleClick","arr","total","i","setSlide","dropdownContent","DropdownItem","onClick","toggle","modal","Dropdown","isOpen","style","marginBottom","marginTop","DropdownToggle","caret","DropdownMenu","active","App_Slide","color","Modal","ModalHeader","ModalBody","str","modalContent","ModalFooter","connect","dispatch","num","AppContainer","_Component","inherits","createClass","Switch","Route","path","exact","component","withRouter","Boolean","window","location","hostname","match","initialState","undefined","action","objectSpread","store","logger","createLogger","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","es","BrowserRouter","containers","document","getElementById"],"mappings":"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","file":"static/js/main.f675987d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Container, Col, Form,\n  FormGroup, Label, Input,\n  Button, FormText, FormFeedback,\n} from 'reactstrap';\nimport './login.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n      'email': '',\n      'password': '',\n      validate: {\n        emailState: '', passwordState: ''\n      },\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  validateInput = (e) => {\n    debugger\n    const { validate , email, password} = this.state\n      if (email.length && email === 'shaadi') {\n        validate.emailState = 'has-success'\n        this.setState({ validate })\n      } else {\n        validate.emailState = 'has-danger'\n        this.setState({ validate })\n        return false\n      }\n      if (password.length && password === '123') {\n        validate.passwordState = 'has-success'\n        this.setState({ validate })\n      } else {\n        validate.passwordState = 'has-danger'\n        this.setState({ validate })\n        return false\n      }\n      return true\n  }\n\n  handleChange = async (event) => {\n    const { target } = event;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const { name } = target;\n    await this.setState({\n      [ name ]: value,\n    });\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    if(this.validateInput()) {\n     this.props.history.push('/') \n    }\n  }\n\n  render() {\n    const { email, password } = this.state\n    return (\n      <Container className=\"App\">\n        <h2>Sign In</h2>\n        <Form className=\"form\" onSubmit={ (e) => this.submitForm(e) }>\n          <Col>\n            <FormGroup>\n              <Label>Username</Label>\n              <Input\n                type=\"text\"\n                name=\"email\"\n                id=\"exampleEmail\"\n                placeholder=\"myemail@email.com\"\n                value={ email }\n                valid={ this.state.validate.emailState === 'has-success' }\n                invalid={ this.state.validate.emailState === 'has-danger' }\n                onChange={ (e) => this.handleChange(e) }\n              />\n              <FormFeedback valid>\n                That's a tasty looking email you've got there.\n              </FormFeedback>\n              <FormFeedback>\n                Uh oh! Looks like there is an issue with your email. Please input a correct email.\n              </FormFeedback>\n              <FormText>Your username is most likely your email.</FormText>\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"examplePassword\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"examplePassword\"\n                placeholder=\"********\"\n                value={ password }\n                valid={ this.state.validate.passwordState === 'has-success' }\n                invalid={ this.state.validate.passwordState === 'has-danger' }\n                onChange={ (e) => this.handleChange(e) }\n            />\n            </FormGroup>\n          </Col>\n          <Button>Submit</Button>\n      </Form>\n      </Container>\n    );\n  }\n}\n\nexport default Login;","let numbers = {\n    '1': 'ONE', \n    '2': 'TWO',\n    '3': 'THREE',\n    '4': 'FOUR',\n    '5': 'FIVE',\n    '6': 'SIX',\n    '7': 'SEVEN',\n    '8': 'EIGHT',\n    '9': 'NINE',\n    '10': 'TEN',\n    '11': 'ELEVEN',\n    '12':'TWELVE',\n    '13': 'THIRTEEN',\n    '14': 'FOURTEEN',\n    '15': 'FIFTEEN',\n    '16': 'SIXTEEN',\n    '17': 'SEVENTEEN',\n    '18': 'EIGHTEEN',\n    '19': 'NINETEEN',\n    '20': 'TWENTY'\n}\n\nexport {\n    numbers\n}","import React, { Component } from 'react';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap';\nimport {numbers} from './config'\n\nclass Slide extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { activeIndex: 0 , slides: []};\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n  }\n\n  onExiting() {\n    this.animating = true;\n  }\n\n  componentWillReceiveProps(nextProps) {\n      if(this.props.slides.length != nextProps.slides.length) {\n          this.setState({\n              activeIndex: 0\n          })\n      }  \n  }\n\n  onExited() {\n    this.animating = false;\n  }\n\n  next() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === this.props.slides.length - 1 ? 0 : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === 0 ? this.props.slides.length - 1 : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n    return (\n      <div>\n        <style>\n          {\n            `.custom-tag {\n                max-width: 100%;\n                height: 250px;\n                background: black;\n              }`\n          }\n        </style>\n        <Carousel\n          activeIndex={activeIndex}\n          next={this.next}\n          previous={this.previous}\n        >\n          <CarouselIndicators items={this.props.slides} activeIndex={activeIndex} onClickHandler={this.goToIndex} />\n            {this.props.slides.map((item, idx) =>\n                <CarouselItem\n                    key={idx}    \n                    className=\"custom-tag\"\n                    tag=\"div\"\n                    key={item}\n                    onExiting={this.onExiting}\n                    onExited={this.onExited}\n                >\n                    <CarouselCaption className=\"text-danger\" captionHeader={numbers[item]} />\n                </CarouselItem>    \n            )}\n          <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\n          <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\n        </Carousel>\n      </div>\n    );\n  }\n}\n\nexport default Slide;\n","\nexport const SET_SLIDE = 'SET_SLIDE'\n\nexport function setSlide(active, total, arr) {\n    return {\n        type: SET_SLIDE,\n        active, total,\n        slides: arr\n    }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  Container, Col, Form,\n  FormGroup, Label, Input,\n  Button, FormText, FormFeedback,\n  Dropdown, DropdownToggle, DropdownMenu, DropdownItem,\n  Modal, ModalHeader, ModalBody, ModalFooter\n} from 'reactstrap';\nimport Slide from './Slide'\n\n//custom\nimport {setSlide} from './actions'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,  modal: false\n    };\n  }\n\n  toggleDropdown = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n\n  handleClick = (e) => {\n    this.setState({\n      value: e.target.value\n    },() => {\n      let arr = []\n      let {total} =  this.props.slides\n      total.push(this.state.value)\n      for(let i = 1; i<= this.state.value; i++) {\n        arr.push(i)\n      }\n      this.props.setSlide(this.state.value, total, arr)\n    })\n  }\n \n  dropdownContent = () => {\n    let arr = []\n    for (let i=1; i<=20; i++) {\n      arr.push(i)\n    }\n    return arr.map(item => <DropdownItem value={item} onClick={this.handleClick}>{item}</DropdownItem>)\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {  \n    const modalContent = () => {\n      let str = this.props.slides.total.length ? 'The user selected': \"Select from slide  \"\n      this.props.slides.total.map(item => {\n        str = str + ' ' + item\n      })\n      return str\n    }\n\n    return (\n      <Container>\n        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown} style={{\n          marginBottom: '1em', marginTop: '1em'\n        }}>\n          <DropdownToggle caret>\n            {this.state.value ? this.state.value : 'Select Slides'}\n          </DropdownToggle>\n          <DropdownMenu>\n            {this.dropdownContent()}\n          </DropdownMenu>\n        </Dropdown>\n        {\n          this.props.slides.active && <Slide slides = {this.props.slides.slides}/>\n        }\n        {\n           <Button color=\"primary\" onClick={this.toggle} style={{\n              marginBottom: '1em', marginTop: '1em'\n          }}>\n            Finish\n          </Button>\n        }\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>User Activity</ModalHeader>\n          <ModalBody>\n            {modalContent()}\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  slides: state\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSlide: (num, total, arr) => dispatch(setSlide(num, total, arr))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n    Route,\n    Link,\n    Redirect,\n    Switch,\n    withRouter,\n    BrowserRouter as Router,\n\n  } from 'react-router-dom';\nimport Login from './Login'\nimport App from './App'\n\nexport class AppContainer extends Component {\n\n  componentDidMount() {\n    this.props.history.push('/login')\n  }\n\n  render() {\n    return (\n        <Switch> \n            <Route path = '/' exact component = {App} />\n            <Route path = '/login' exact component = {Login} />\n            {/* <Redirect from='/shaadi-assignment' to ='/shaadi-assignment/login' /> */}\n        </Switch>\n    )\n  }\n}\n\n\nexport default withRouter(AppContainer)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\nSET_SLIDE\n} from './actions'\n\nconst initialState = {\n    total: [],\n    active: null\n}\n\n\nexport function slides(state = initialState, action) {\n    switch (action.type) {\n        case SET_SLIDE:\n            return {\n                ...state,\n                total: action.total,\n                active: action.active,\n                slides: action.slides\n            }\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './containers';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './configureStore';\nimport { Provider } from 'react-redux';\nimport {\n    Route,\n    Link,\n    Redirect,\n    Switch,\n    withRouter,\n    BrowserRouter as Router,\n  } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {slides} from '../src/containers/App/reducer'\nconst store = configureStore()\n\nReactDOM.render(\n<Provider store={store}>     \n      <Router>\n        <AppContainer />\n      </Router>  \n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { createLogger } from 'redux-logger'\r\nimport {slides} from '../src/containers/App/reducer'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nexport default function configureStore(initialState = {}, history) {\r\n const logger = createLogger()\r\n const store = createStore(\r\n  slides,\r\n  applyMiddleware(thunk, logger) \r\n )\r\n return store\r\n}"],"sourceRoot":""}